/*
 * Copyright (c) 2025, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id 'com.github.spotbugs-base'
    id 'com.github.johnrengelman.shadow'
    id 'de.undercouch.download'
    id 'net.researchgate.release'
}

description = 'Ballerina - MySQL CDC Driver'

ext.ballerinaLangVersion = project.ballerinaLangVersion

allprojects {
    group = project.group
    version = project.version

    apply plugin: 'maven-publish'

    repositories {
        mavenLocal()
        maven {
            url = 'https://maven.wso2.org/nexus/content/repositories/releases/'
        }

        maven {
            url = 'https://maven.wso2.org/nexus/content/groups/wso2-public/'
        }

        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/*'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
    }

    ext {
        snapshotVersion = '-SNAPSHOT'
        timestampedVersionRegex = '.*-\\d{8}-\\d{6}-\\w.*\$'
    }
}

def moduleVersion = project.version.replace("-SNAPSHOT", "")

subprojects {

    configurations {
        externalJars
    }

    dependencies {
        externalJars (group: 'io.debezium', name: 'debezium-connector-mysql', version: "${debeziumVersion}") {
            transitive = false
        }
        externalJars (group: 'io.debezium', name: 'debezium-connector-binlog', version: "${debeziumVersion}") {
            transitive = false
        }
        externalJars (group: 'io.debezium', name: 'debezium-ddl-parser', version: "${debeziumVersion}") {
            transitive = false
        }
        externalJars (group: 'io.debezium', name: 'mysql-binlog-connector-java', version: "${debeziumMySQLBinLogVersion}") {
            transitive = false
        }
        externalJars (group: 'org.antlr', name: 'antlr4-runtime', version: "${antlrVersion}") {
            transitive = false
        }
    }
}

tasks.register('build') {
    dependsOn(':mysql.cdc.driver-ballerina:build')
}

release {
    buildTasks = ['build']
    failOnSnapshotDependencies = true
    versionPropertyFile = 'gradle.properties'
    tagTemplate = 'v${version}'
    git {
        requireBranch = "release-${moduleVersion}"
        pushToRemote = 'origin'
    }
}
